{"version":3,"sources":["/src/lib/utils.ts","/src/layout.tsx","/src/pages/viewer/epub/index.tsx","/src/pages/viewer/pdf/index.tsx","/src/components/ui/skeleton.tsx","/src/pages/viewer/cbz/index.tsx","/src/api/access.tsx","/src/hooks/windowSize.tsx","/src/pages/viewer/cbr/index.tsx","/src/components/hooks/use-mobile.tsx","/src/components/ui/label.tsx","/src/components/lib/utils.ts","/src/api/progress.tsx"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n\treturn twMerge(clsx(inputs));\n}\n","import { SidebarProvider, SidebarTrigger, useSidebar } from \"@/components/ui/sidebar\";\nimport { AppSidebar } from \"./components/app-sidebar\";\nimport { Outlet } from \"react-router-dom\";\n\nfunction Trigger() {\n    const { open, openMobile, isMobile } = useSidebar();\n\n    if (isMobile ? openMobile : open) {\n        return null;\n    }\n\n    return <SidebarTrigger className=\"fixed h-9 w-9 [&_svg]:size-7\" />\n}\n\nexport default function Layout() {\n    return (\n        <SidebarProvider>\n            <AppSidebar />\n            <Trigger />\n            <Outlet />\n        </SidebarProvider >\n    );\n}\n","import { useState, useEffect } from \"react\";\nimport { EPUBViewer } from \"@/components/viewer/epub\";\n\nfunction useQuery() {\n    const [query, setQuery] = useState<URLSearchParams | null>(null);\n\n    useEffect(() => {\n        setQuery(new URLSearchParams(window.location.search));\n    }, []);\n\n    return query;\n}\n\nexport function EPUBViewerPage() {\n    const query = useQuery();\n\n    if (!query) return <p>Loading...</p>;\n\n    const path = query.get(\"path\") ?? \"\";\n    const position = query.get(\"position\") ?? \"\"\n\n    return <EPUBViewer fileUrl={`/book/epub?path=${encodeURIComponent(path)}`} initialPage={position} />;\n}","import { useState, useEffect } from \"react\";\nimport { PDFViewer } from \"@/components/viewer/pdf\";\n\nfunction useQuery() {\n    const [query, setQuery] = useState<URLSearchParams | null>(null);\n\n    useEffect(() => {\n        setQuery(new URLSearchParams(window.location.search));\n    }, []);\n\n    return query;\n}\n\nexport function PDFViewerPage() {\n    const query = useQuery();\n\n    if (!query) return <p>Loading...</p>;\n\n    const path = query.get(\"path\") ?? \"\";\n    const parsed = parseInt(query.get(\"position\") ?? \"\", 10);\n    const position = isNaN(parsed) ? 1 : parsed;\n\n    return <PDFViewer fileUrl={`/book/pdf?path=${encodeURIComponent(path)}`} initialPage={position} />;\n}\n","import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","import { useState, useEffect } from \"react\";\nimport { CBZViewer } from \"@/components/viewer/cbz\";\n\nfunction useQuery() {\n    const [query, setQuery] = useState<URLSearchParams | null>(null);\n\n    useEffect(() => {\n        setQuery(new URLSearchParams(window.location.search));\n    }, []);\n\n    return query;\n}\n\nexport function CBZViewerPage() {\n    const query = useQuery();\n\n    if (!query) return <p>Loading...</p>;\n\n    const path = query.get(\"path\") ?? \"\";\n    const parsed = parseInt(query.get(\"position\") ?? \"\", 10);\n    const position = isNaN(parsed) ? 1 : parsed;\n\n    return <CBZViewer fileUrl={`/book/cbz?path=${encodeURIComponent(path)}`} initialPage={position} />;\n}\n","export function sendAccess(encodedFilePath: string) {\n    const url = new URL('/api/access', window.location.origin);\n    url.searchParams.set('path', encodedFilePath);\n\n    if (encodedFilePath === \"\") {\n        return\n    }\n\n    fetch(url.toString(), {\n        method: 'GET',\n    }).then(res => {\n        if (!res.ok) {\n            console.error(\"Failed to send progress\");\n        }\n    }).catch(err => {\n        console.error(\"Network error while sending progress\", err);\n    });\n}\n","import { useState, useEffect } from \"react\"\n\nexport function useWindowSize() {\n    const [size, setSize] = useState({\n        width: window.innerWidth,\n        height: window.innerHeight,\n    })\n\n    useEffect(() => {\n        const handleResize = () => {\n            setSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            })\n        }\n\n        window.addEventListener(\"resize\", handleResize)\n        return () => {\n            window.removeEventListener(\"resize\", handleResize)\n        }\n    }, [])\n\n    return size\n}\n","import { useState, useEffect } from \"react\";\nimport { CBRViewer } from \"@/components/viewer/cbr\";\n\nfunction useQuery() {\n    const [query, setQuery] = useState<URLSearchParams | null>(null);\n\n    useEffect(() => {\n        setQuery(new URLSearchParams(window.location.search));\n    }, []);\n\n    return query;\n}\n\nexport function CBRViewerPage() {\n    const query = useQuery();\n\n    if (!query) return <p>Loading...</p>;\n\n    const path = query.get(\"path\") ?? \"\";\n    const parsed = parseInt(query.get(\"position\") ?? \"\", 10);\n    const position = isNaN(parsed) ? 1 : parsed;\n\n    return <CBRViewer fileUrl={`/book/cbr?path=${encodeURIComponent(path)}`} initialPage={position} />;\n}\n","import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n\treturn twMerge(clsx(inputs));\n}\n","export function sendProgress(encodedFilePath: string, currentPosition: string, progress: number) {\n    const url = new URL('/api/progress', window.location.origin);\n    url.searchParams.set('path', encodedFilePath);\n    url.searchParams.set('position', currentPosition);\n    url.searchParams.set('progress', progress.toString());\n\n    fetch(url.toString(), {\n        method: 'GET',\n    }).then(res => {\n        if (!res.ok) {\n            console.error(\"Failed to send progress\");\n        }\n    }).catch(err => {\n        console.error(\"Network error while sending progress\", err);\n    });\n}\n"],"names":[],"mappings":"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"}